<?php
/* Generated by neoan3-cli */

namespace Neoan3\Components;

use Neoan3\Core\RouteException;
use Neoan3\Frame\Vastn3;
use Neoan3\Model\UserModel;

class Register extends Vastn3
{

    private static array $requiredComponents = ['animation', 'modal'];

    /**
     * This component requires "animation" & "modal"
     * @return array
     */
    static function dependencies()
    {
        return self::$requiredComponents;
    }

    function init()
    {
        $this->hook('main', 'register')->vueComponent('register')->output();
    }

    /**
     * @param array $newUser
     * @return array
     * @throws RouteException
     */
    function postRegister(array $newUser): array
    {
        try {
            $user = UserModel::create($newUser);
        } catch (\Exception $e) {
            throw new RouteException($e->getMessage(), 422);
        }
        // send confirmation link
        $mail = $this->newEmail();
        try {
            $mail->addAddress($newUser['emails'][0]['email'], $newUser['userName']);
            $mail->Subject = 'Please verify your email';
            $mail->Body = Email::loadTemplate(
                'confirmation',
                [
                    'confirmationLink' => base . 'email/' . $user['emails'][0]['confirm_code'] . '/'
                ]
            );
            $mail->send();
        } catch (\Exception $e) {
            throw new RouteException($mail->ErrorInfo, 500);
        }

        return ['registered' => true];
    }

    function getRegister(array $user)
    {
        $exists = UserModel::find($user);
        return ['free' => empty($exists)];
    }

}
